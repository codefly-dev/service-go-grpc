# Build stage
FROM golang:{{ .GoVersion }}-alpine AS builder

# Install ca-certificates for HTTPS requests and git for private repos if needed
RUN apk add --no-cache ca-certificates git

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY code/go.mod code/go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
{{ range .Components}}
COPY {{.}} {{.}}
{{end}}

WORKDIR /app/code

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags='-w -s -extldflags "-static"' -o app

# Final stage
FROM alpine:{{ .AlpineVersion }}

# Install ca-certificates for HTTPS requests
RUN apk add --no-cache ca-certificates

# Set working directory
WORKDIR /app

# Set environment variables
{{ range .Envs}}
ENV {{.Key}}={{.Value}}
{{end}}

# Create a non-root user
RUN adduser -D appuser

# Copy the binary from the builder stage
COPY --chown=appuser --from=builder /app/code/app .

# Use the non-root user
USER appuser

# Expose ports
EXPOSE 8080 9090

# Run the binary
CMD ["./app"]
